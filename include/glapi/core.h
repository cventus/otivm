#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__)
#define APIENTRY __stdcall
#endif

#ifndef APIENTRY
#define APIENTRY
#endif

#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif

#define GL_VERSION_1_0 1
#define GL_VERSION_1_1 1
#define GL_VERSION_1_2 1
#define GL_VERSION_1_3 1
#define GL_VERSION_1_4 1
#define GL_VERSION_1_5 1
#define GL_VERSION_2_0 1
#define GL_VERSION_2_1 1
#define GL_VERSION_3_0 1
#define GL_VERSION_3_1 1
#define GL_VERSION_3_2 1
#define GL_VERSION_3_3 1
#define GL_VERSION_4_0 1
#define GL_VERSION_4_1 1
#define GL_VERSION_4_2 1
#define GL_VERSION_4_3 1
#define GL_VERSION_4_4 1
#define GL_VERSION_4_5 1

#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_REPEAT 0x2901
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DOUBLE 0x140A
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x8814
#define GL_RGB32F 0x8815
#define GL_RGBA16F 0x881A
#define GL_RGB16F 0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_HALF_FLOAT 0x140B
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_SRC1_COLOR 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_SAMPLER_BINDING 0x8919
#define GL_RGB10_A2UI 0x906F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIMESTAMP 0x8E28
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_SAMPLE_SHADING 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_PATCHES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_ISOLINES 0x8E7A
#define GL_QUADS 0x0007
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_FIXED 0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_LOW_FLOAT 0x8DF0
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_HIGH_FLOAT 0x8DF2
#define GL_LOW_INT 0x8DF3
#define GL_MEDIUM_INT 0x8DF4
#define GL_HIGH_INT 0x8DF5
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_RGB565 0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_MAX_VIEWPORTS 0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_COMPUTE_SHADER 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_BUFFER 0x82E0
#define GL_SHADER 0x82E1
#define GL_PROGRAM 0x82E2
#define GL_VERTEX_ARRAY 0x8074
#define GL_QUERY 0x82E3
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_SAMPLER 0x82E6
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_COLOR_COMPONENTS 0x8283
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_COLOR_RENDERABLE 0x8286
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_MIPMAP 0x8293
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_COLOR_ENCODING 0x8296
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_FILTER 0x829A
#define GL_VERTEX_TEXTURE 0x829B
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_CLEAR_BUFFER 0x82B4
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_FULL_SUPPORT 0x82B7
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_TYPE 0x92FA
#define GL_ARRAY_SIZE 0x92FB
#define GL_OFFSET 0x92FC
#define GL_BLOCK_INDEX 0x92FD
#define GL_ARRAY_STRIDE 0x92FE
#define GL_MATRIX_STRIDE 0x92FF
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_IS_PER_PATCH 0x92E7
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STACK_OVERFLOW 0x0503
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_CLEAR_TEXTURE 0x9365
#define GL_LOCATION_COMPONENT 0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_CONTEXT_LOST 0x0507
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_ZERO_TO_ONE 0x935F
#define GL_CLIP_ORIGIN 0x935C
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_TEXTURE_TARGET 0x1006
#define GL_QUERY_TARGET 0x82EA
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_PRIMITIVE_BOUNDING_BOX_ARB 0x92BE
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB 0x9381
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB 0x9382
#define GL_UNSIGNED_INT64_ARB 0x140F
#define GL_SYNC_CL_EVENT_ARB 0x8240
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#define GL_FIXED_ONLY_ARB 0x891D
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#define GL_DRAW_BUFFER0_ARB 0x8825
#define GL_DRAW_BUFFER1_ARB 0x8826
#define GL_DRAW_BUFFER2_ARB 0x8827
#define GL_DRAW_BUFFER3_ARB 0x8828
#define GL_DRAW_BUFFER4_ARB 0x8829
#define GL_DRAW_BUFFER5_ARB 0x882A
#define GL_DRAW_BUFFER6_ARB 0x882B
#define GL_DRAW_BUFFER7_ARB 0x882C
#define GL_DRAW_BUFFER8_ARB 0x882D
#define GL_DRAW_BUFFER9_ARB 0x882E
#define GL_DRAW_BUFFER10_ARB 0x882F
#define GL_DRAW_BUFFER11_ARB 0x8830
#define GL_DRAW_BUFFER12_ARB 0x8831
#define GL_DRAW_BUFFER13_ARB 0x8832
#define GL_DRAW_BUFFER14_ARB 0x8833
#define GL_DRAW_BUFFER15_ARB 0x8834
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#define GL_PROGRAM_LENGTH_ARB 0x8627
#define GL_PROGRAM_FORMAT_ARB 0x8876
#define GL_PROGRAM_BINDING_ARB 0x8677
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#define GL_PROGRAM_STRING_ARB 0x8628
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#define GL_CURRENT_MATRIX_ARB 0x8641
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#define GL_MATRIX0_ARB 0x88C0
#define GL_MATRIX1_ARB 0x88C1
#define GL_MATRIX2_ARB 0x88C2
#define GL_MATRIX3_ARB 0x88C3
#define GL_MATRIX4_ARB 0x88C4
#define GL_MATRIX5_ARB 0x88C5
#define GL_MATRIX6_ARB 0x88C6
#define GL_MATRIX7_ARB 0x88C7
#define GL_MATRIX8_ARB 0x88C8
#define GL_MATRIX9_ARB 0x88C9
#define GL_MATRIX10_ARB 0x88CA
#define GL_MATRIX11_ARB 0x88CB
#define GL_MATRIX12_ARB 0x88CC
#define GL_MATRIX13_ARB 0x88CD
#define GL_MATRIX14_ARB 0x88CE
#define GL_MATRIX15_ARB 0x88CF
#define GL_MATRIX16_ARB 0x88D0
#define GL_MATRIX17_ARB 0x88D1
#define GL_MATRIX18_ARB 0x88D2
#define GL_MATRIX19_ARB 0x88D3
#define GL_MATRIX20_ARB 0x88D4
#define GL_MATRIX21_ARB 0x88D5
#define GL_MATRIX22_ARB 0x88D6
#define GL_MATRIX23_ARB 0x88D7
#define GL_MATRIX24_ARB 0x88D8
#define GL_MATRIX25_ARB 0x88D9
#define GL_MATRIX26_ARB 0x88DA
#define GL_MATRIX27_ARB 0x88DB
#define GL_MATRIX28_ARB 0x88DC
#define GL_MATRIX29_ARB 0x88DD
#define GL_MATRIX30_ARB 0x88DE
#define GL_MATRIX31_ARB 0x88DF
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#define GL_LINES_ADJACENCY_ARB 0x000A
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#define GL_INT64_ARB 0x140E
#define GL_INT64_VEC2_ARB 0x8FE9
#define GL_INT64_VEC3_ARB 0x8FEA
#define GL_INT64_VEC4_ARB 0x8FEB
#define GL_UNSIGNED_INT64_VEC2_ARB 0x8FF5
#define GL_UNSIGNED_INT64_VEC3_ARB 0x8FF6
#define GL_UNSIGNED_INT64_VEC4_ARB 0x8FF7
#define GL_HALF_FLOAT_ARB 0x140B
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_EQUATION 0x8009
#define GL_PARAMETER_BUFFER_ARB 0x80EE
#define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#define GL_SRGB_DECODE_ARB 0x8299
#define GL_MULTISAMPLE_ARB 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#define GL_SAMPLES_ARB 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#define GL_CURRENT_QUERY_ARB 0x8865
#define GL_QUERY_RESULT_ARB 0x8866
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#define GL_SAMPLES_PASSED_ARB 0x8914
#define GL_MAX_SHADER_COMPILER_THREADS_ARB 0x91B0
#define GL_COMPLETION_STATUS_ARB 0x91B1
#define GL_VERTICES_SUBMITTED_ARB 0x82EE
#define GL_PRIMITIVES_SUBMITTED_ARB 0x82EF
#define GL_VERTEX_SHADER_INVOCATIONS_ARB 0x82F0
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#define GL_POINT_SIZE_MIN_ARB 0x8126
#define GL_POINT_SIZE_MAX_ARB 0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#define GL_POINT_SPRITE_ARB 0x8861
#define GL_COORD_REPLACE_ARB 0x8862
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB 0x933D
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB 0x933F
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB 0x9340
#define GL_SAMPLE_LOCATION_ARB 0x8E50
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB 0x9341
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB 0x9342
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB 0x9343
#define GL_SAMPLE_SHADING_ARB 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#define GL_SPARSE_STORAGE_BIT_ARB 0x0400
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB 0x82F8
#define GL_TEXTURE_SPARSE_ARB 0x91A6
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
#define GL_NUM_SPARSE_LEVELS_ARB 0x91AA
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
#define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB 0x9551
#define GL_SPIR_V_BINARY_ARB 0x9552
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#define GL_COMPRESSED_RGB_ARB 0x84ED
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#define GL_NORMAL_MAP_ARB 0x8511
#define GL_REFLECTION_MAP_ARB 0x8512
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#define GL_COMBINE_ARB 0x8570
#define GL_COMBINE_RGB_ARB 0x8571
#define GL_COMBINE_ALPHA_ARB 0x8572
#define GL_SOURCE0_RGB_ARB 0x8580
#define GL_SOURCE1_RGB_ARB 0x8581
#define GL_SOURCE2_RGB_ARB 0x8582
#define GL_SOURCE0_ALPHA_ARB 0x8588
#define GL_SOURCE1_ALPHA_ARB 0x8589
#define GL_SOURCE2_ALPHA_ARB 0x858A
#define GL_OPERAND0_RGB_ARB 0x8590
#define GL_OPERAND1_RGB_ARB 0x8591
#define GL_OPERAND2_RGB_ARB 0x8592
#define GL_OPERAND0_ALPHA_ARB 0x8598
#define GL_OPERAND1_ALPHA_ARB 0x8599
#define GL_OPERAND2_ALPHA_ARB 0x859A
#define GL_RGB_SCALE_ARB 0x8573
#define GL_ADD_SIGNED_ARB 0x8574
#define GL_INTERPOLATE_ARB 0x8575
#define GL_SUBTRACT_ARB 0x84E7
#define GL_CONSTANT_ARB 0x8576
#define GL_PRIMARY_COLOR_ARB 0x8577
#define GL_PREVIOUS_ARB 0x8578
#define GL_DOT3_RGB_ARB 0x86AE
#define GL_DOT3_RGBA_ARB 0x86AF
#define GL_TEXTURE_REDUCTION_MODE_ARB 0x9366
#define GL_WEIGHTED_AVERAGE_ARB 0x9367
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_RGBA32F_ARB 0x8814
#define GL_RGB32F_ARB 0x8815
#define GL_ALPHA32F_ARB 0x8816
#define GL_INTENSITY32F_ARB 0x8817
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_RGBA16F_ARB 0x881A
#define GL_RGB16F_ARB 0x881B
#define GL_ALPHA16F_ARB 0x881C
#define GL_INTENSITY16F_ARB 0x881D
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#define GL_MIRRORED_REPEAT_ARB 0x8370
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
#define GL_MULTIPLY_KHR 0x9294
#define GL_SCREEN_KHR 0x9295
#define GL_OVERLAY_KHR 0x9296
#define GL_DARKEN_KHR 0x9297
#define GL_LIGHTEN_KHR 0x9298
#define GL_COLORDODGE_KHR 0x9299
#define GL_COLORBURN_KHR 0x929A
#define GL_HARDLIGHT_KHR 0x929B
#define GL_SOFTLIGHT_KHR 0x929C
#define GL_DIFFERENCE_KHR 0x929E
#define GL_EXCLUSION_KHR 0x92A0
#define GL_HSL_HUE_KHR 0x92AD
#define GL_HSL_SATURATION_KHR 0x92AE
#define GL_HSL_COLOR_KHR 0x92AF
#define GL_HSL_LUMINOSITY_KHR 0x92B0
#define GL_BLEND_ADVANCED_COHERENT_KHR 0x9285
#define GL_CONTEXT_RELEASE_BEHAVIOR_KHR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR 0x82FC
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
#define GL_DEBUG_SOURCE_API_KHR 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
#define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
#define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
#define GL_DEBUG_TYPE_ERROR_KHR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
#define GL_DEBUG_TYPE_OTHER_KHR 0x8251
#define GL_DEBUG_TYPE_MARKER_KHR 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
#define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
#define GL_BUFFER_KHR 0x82E0
#define GL_SHADER_KHR 0x82E1
#define GL_PROGRAM_KHR 0x82E2
#define GL_VERTEX_ARRAY_KHR 0x8074
#define GL_QUERY_KHR 0x82E3
#define GL_PROGRAM_PIPELINE_KHR 0x82E4
#define GL_SAMPLER_KHR 0x82E6
#define GL_MAX_LABEL_LENGTH_KHR 0x82E8
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
#define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
#define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
#define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
#define GL_DEBUG_OUTPUT_KHR 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
#define GL_STACK_OVERFLOW_KHR 0x0503
#define GL_STACK_UNDERFLOW_KHR 0x0504
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR 0x00000008
#define GL_CONTEXT_ROBUST_ACCESS 0x90F3
#define GL_CONTEXT_ROBUST_ACCESS_KHR 0x90F3
#define GL_LOSE_CONTEXT_ON_RESET_KHR 0x8252
#define GL_GUILTY_CONTEXT_RESET_KHR 0x8253
#define GL_INNOCENT_CONTEXT_RESET_KHR 0x8254
#define GL_UNKNOWN_CONTEXT_RESET_KHR 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY_KHR 0x8256
#define GL_NO_RESET_NOTIFICATION_KHR 0x8261
#define GL_CONTEXT_LOST_KHR 0x0507
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD

typedef unsigned int GLenum;
typedef float GLfloat;
typedef int GLint;
typedef int GLsizei;
typedef unsigned int GLbitfield;
typedef double GLdouble;
typedef unsigned int GLuint;
typedef unsigned char GLboolean;
typedef unsigned char GLubyte;
typedef void GLvoid;
typedef float GLclampf;
typedef double GLclampd;
#include <stddef.h>
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;
typedef char GLchar;
typedef short GLshort;
typedef signed char GLbyte;
typedef unsigned short GLushort;
typedef unsigned short GLhalf;
typedef struct __GLsync *GLsync;
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
typedef uint64_t GLuint64;
typedef int64_t GLint64;
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef uint64_t GLuint64EXT;
struct _cl_context;
struct _cl_event;
typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef unsigned short GLhalfARB;
typedef void (APIENTRY *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

/* core OpenGL APIs */
struct gl_core30
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
};

struct gl_core31
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
};

struct gl_core32
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
};

struct gl_core33
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
};

struct gl_core40
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP MinSampleShading)(GLfloat value);
	void (APIENTRYP BlendEquationi)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunci)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
};

struct gl_core41
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP MinSampleShading)(GLfloat value);
	void (APIENTRYP BlendEquationi)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunci)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP ReleaseShaderCompiler)(void);
	void (APIENTRYP ShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
	void (APIENTRYP GetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
	void (APIENTRYP DepthRangef)(GLfloat n, GLfloat f);
	void (APIENTRYP ClearDepthf)(GLfloat d);
	void (APIENTRYP GetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
	void (APIENTRYP ProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP UseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
	void (APIENTRYP ActiveShaderProgram)(GLuint pipeline, GLuint program);
	GLuint (APIENTRYP CreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
	void (APIENTRYP BindProgramPipeline)(GLuint pipeline);
	void (APIENTRYP DeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
	void (APIENTRYP GenProgramPipelines)(GLsizei n, GLuint *pipelines);
	GLboolean (APIENTRYP IsProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
	void (APIENTRYP ProgramUniform1i)(GLuint program, GLint location, GLint v0);
	void (APIENTRYP ProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
	void (APIENTRYP ProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
	void (APIENTRYP ProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
	void (APIENTRYP ProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
	void (APIENTRYP ProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP ProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
	void (APIENTRYP ProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP ProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP ProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP ProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
	void (APIENTRYP ProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP ProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP ProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP ProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
	void (APIENTRYP ProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP ProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ValidateProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP VertexAttribL1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttribL1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP ViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
	void (APIENTRYP ViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
	void (APIENTRYP ViewportIndexedfv)(GLuint index, const GLfloat *v);
	void (APIENTRYP ScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
	void (APIENTRYP ScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
	void (APIENTRYP ScissorIndexedv)(GLuint index, const GLint *v);
	void (APIENTRYP DepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
	void (APIENTRYP DepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
	void (APIENTRYP GetFloati_v)(GLenum target, GLuint index, GLfloat *data);
	void (APIENTRYP GetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
};

struct gl_core42
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP MinSampleShading)(GLfloat value);
	void (APIENTRYP BlendEquationi)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunci)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP ReleaseShaderCompiler)(void);
	void (APIENTRYP ShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
	void (APIENTRYP GetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
	void (APIENTRYP DepthRangef)(GLfloat n, GLfloat f);
	void (APIENTRYP ClearDepthf)(GLfloat d);
	void (APIENTRYP GetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
	void (APIENTRYP ProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP UseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
	void (APIENTRYP ActiveShaderProgram)(GLuint pipeline, GLuint program);
	GLuint (APIENTRYP CreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
	void (APIENTRYP BindProgramPipeline)(GLuint pipeline);
	void (APIENTRYP DeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
	void (APIENTRYP GenProgramPipelines)(GLsizei n, GLuint *pipelines);
	GLboolean (APIENTRYP IsProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
	void (APIENTRYP ProgramUniform1i)(GLuint program, GLint location, GLint v0);
	void (APIENTRYP ProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
	void (APIENTRYP ProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
	void (APIENTRYP ProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
	void (APIENTRYP ProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
	void (APIENTRYP ProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP ProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
	void (APIENTRYP ProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP ProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP ProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP ProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
	void (APIENTRYP ProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP ProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP ProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP ProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
	void (APIENTRYP ProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP ProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ValidateProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP VertexAttribL1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttribL1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP ViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
	void (APIENTRYP ViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
	void (APIENTRYP ViewportIndexedfv)(GLuint index, const GLfloat *v);
	void (APIENTRYP ScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
	void (APIENTRYP ScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
	void (APIENTRYP ScissorIndexedv)(GLuint index, const GLint *v);
	void (APIENTRYP DepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
	void (APIENTRYP DepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
	void (APIENTRYP GetFloati_v)(GLenum target, GLuint index, GLfloat *data);
	void (APIENTRYP GetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
	void (APIENTRYP DrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
	void (APIENTRYP GetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
	void (APIENTRYP BindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
	void (APIENTRYP MemoryBarrier)(GLbitfield barriers);
	void (APIENTRYP TexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP DrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
	void (APIENTRYP DrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
};

struct gl_core43
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP MinSampleShading)(GLfloat value);
	void (APIENTRYP BlendEquationi)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunci)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP ReleaseShaderCompiler)(void);
	void (APIENTRYP ShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
	void (APIENTRYP GetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
	void (APIENTRYP DepthRangef)(GLfloat n, GLfloat f);
	void (APIENTRYP ClearDepthf)(GLfloat d);
	void (APIENTRYP GetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
	void (APIENTRYP ProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP UseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
	void (APIENTRYP ActiveShaderProgram)(GLuint pipeline, GLuint program);
	GLuint (APIENTRYP CreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
	void (APIENTRYP BindProgramPipeline)(GLuint pipeline);
	void (APIENTRYP DeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
	void (APIENTRYP GenProgramPipelines)(GLsizei n, GLuint *pipelines);
	GLboolean (APIENTRYP IsProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
	void (APIENTRYP ProgramUniform1i)(GLuint program, GLint location, GLint v0);
	void (APIENTRYP ProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
	void (APIENTRYP ProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
	void (APIENTRYP ProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
	void (APIENTRYP ProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
	void (APIENTRYP ProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP ProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
	void (APIENTRYP ProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP ProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP ProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP ProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
	void (APIENTRYP ProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP ProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP ProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP ProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
	void (APIENTRYP ProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP ProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ValidateProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP VertexAttribL1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttribL1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP ViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
	void (APIENTRYP ViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
	void (APIENTRYP ViewportIndexedfv)(GLuint index, const GLfloat *v);
	void (APIENTRYP ScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
	void (APIENTRYP ScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
	void (APIENTRYP ScissorIndexedv)(GLuint index, const GLint *v);
	void (APIENTRYP DepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
	void (APIENTRYP DepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
	void (APIENTRYP GetFloati_v)(GLenum target, GLuint index, GLfloat *data);
	void (APIENTRYP GetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
	void (APIENTRYP DrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
	void (APIENTRYP GetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
	void (APIENTRYP BindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
	void (APIENTRYP MemoryBarrier)(GLbitfield barriers);
	void (APIENTRYP TexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP DrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
	void (APIENTRYP DrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
	void (APIENTRYP ClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
	void (APIENTRYP DispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
	void (APIENTRYP DispatchComputeIndirect)(GLintptr indirect);
	void (APIENTRYP CopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
	void (APIENTRYP FramebufferParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP GetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
	void (APIENTRYP InvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP InvalidateTexImage)(GLuint texture, GLint level);
	void (APIENTRYP InvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP InvalidateBufferData)(GLuint buffer);
	void (APIENTRYP InvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
	void (APIENTRYP InvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP MultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP MultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP GetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
	GLuint (APIENTRYP GetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP GetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
	GLint (APIENTRYP GetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
	GLint (APIENTRYP GetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP ShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
	void (APIENTRYP TexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP TexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
	void (APIENTRYP BindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
	void (APIENTRYP VertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void (APIENTRYP VertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
	void (APIENTRYP VertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
	void (APIENTRYP DebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
	void (APIENTRYP DebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
	void (APIENTRYP DebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
	GLuint (APIENTRYP GetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
	void (APIENTRYP PushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
	void (APIENTRYP PopDebugGroup)(void);
	void (APIENTRYP ObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP ObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP GetPointerv)(GLenum pname, void **params);
};

struct gl_core44
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP MinSampleShading)(GLfloat value);
	void (APIENTRYP BlendEquationi)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunci)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP ReleaseShaderCompiler)(void);
	void (APIENTRYP ShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
	void (APIENTRYP GetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
	void (APIENTRYP DepthRangef)(GLfloat n, GLfloat f);
	void (APIENTRYP ClearDepthf)(GLfloat d);
	void (APIENTRYP GetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
	void (APIENTRYP ProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP UseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
	void (APIENTRYP ActiveShaderProgram)(GLuint pipeline, GLuint program);
	GLuint (APIENTRYP CreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
	void (APIENTRYP BindProgramPipeline)(GLuint pipeline);
	void (APIENTRYP DeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
	void (APIENTRYP GenProgramPipelines)(GLsizei n, GLuint *pipelines);
	GLboolean (APIENTRYP IsProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
	void (APIENTRYP ProgramUniform1i)(GLuint program, GLint location, GLint v0);
	void (APIENTRYP ProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
	void (APIENTRYP ProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
	void (APIENTRYP ProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
	void (APIENTRYP ProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
	void (APIENTRYP ProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP ProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
	void (APIENTRYP ProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP ProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP ProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP ProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
	void (APIENTRYP ProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP ProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP ProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP ProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
	void (APIENTRYP ProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP ProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ValidateProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP VertexAttribL1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttribL1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP ViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
	void (APIENTRYP ViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
	void (APIENTRYP ViewportIndexedfv)(GLuint index, const GLfloat *v);
	void (APIENTRYP ScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
	void (APIENTRYP ScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
	void (APIENTRYP ScissorIndexedv)(GLuint index, const GLint *v);
	void (APIENTRYP DepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
	void (APIENTRYP DepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
	void (APIENTRYP GetFloati_v)(GLenum target, GLuint index, GLfloat *data);
	void (APIENTRYP GetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
	void (APIENTRYP DrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
	void (APIENTRYP GetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
	void (APIENTRYP BindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
	void (APIENTRYP MemoryBarrier)(GLbitfield barriers);
	void (APIENTRYP TexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP DrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
	void (APIENTRYP DrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
	void (APIENTRYP ClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
	void (APIENTRYP DispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
	void (APIENTRYP DispatchComputeIndirect)(GLintptr indirect);
	void (APIENTRYP CopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
	void (APIENTRYP FramebufferParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP GetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
	void (APIENTRYP InvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP InvalidateTexImage)(GLuint texture, GLint level);
	void (APIENTRYP InvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP InvalidateBufferData)(GLuint buffer);
	void (APIENTRYP InvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
	void (APIENTRYP InvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP MultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP MultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP GetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
	GLuint (APIENTRYP GetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP GetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
	GLint (APIENTRYP GetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
	GLint (APIENTRYP GetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP ShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
	void (APIENTRYP TexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP TexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
	void (APIENTRYP BindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
	void (APIENTRYP VertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void (APIENTRYP VertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
	void (APIENTRYP VertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
	void (APIENTRYP DebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
	void (APIENTRYP DebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
	void (APIENTRYP DebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
	GLuint (APIENTRYP GetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
	void (APIENTRYP PushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
	void (APIENTRYP PopDebugGroup)(void);
	void (APIENTRYP ObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP ObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP GetPointerv)(GLenum pname, void **params);
	void (APIENTRYP BufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
	void (APIENTRYP ClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
	void (APIENTRYP BindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
	void (APIENTRYP BindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
	void (APIENTRYP BindTextures)(GLuint first, GLsizei count, const GLuint *textures);
	void (APIENTRYP BindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
	void (APIENTRYP BindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
	void (APIENTRYP BindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
};

struct gl_core45
{
	void (APIENTRYP CullFace)(GLenum mode);
	void (APIENTRYP FrontFace)(GLenum mode);
	void (APIENTRYP Hint)(GLenum target, GLenum mode);
	void (APIENTRYP LineWidth)(GLfloat width);
	void (APIENTRYP PointSize)(GLfloat size);
	void (APIENTRYP PolygonMode)(GLenum face, GLenum mode);
	void (APIENTRYP Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	void (APIENTRYP TexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
	void (APIENTRYP TexParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP TexParameteriv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP DrawBuffer)(GLenum buf);
	void (APIENTRYP Clear)(GLbitfield mask);
	void (APIENTRYP ClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP ClearStencil)(GLint s);
	void (APIENTRYP ClearDepth)(GLdouble depth);
	void (APIENTRYP StencilMask)(GLuint mask);
	void (APIENTRYP ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void (APIENTRYP DepthMask)(GLboolean flag);
	void (APIENTRYP Disable)(GLenum cap);
	void (APIENTRYP Enable)(GLenum cap);
	void (APIENTRYP Finish)(void);
	void (APIENTRYP Flush)(void);
	void (APIENTRYP BlendFunc)(GLenum sfactor, GLenum dfactor);
	void (APIENTRYP LogicOp)(GLenum opcode);
	void (APIENTRYP StencilFunc)(GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	void (APIENTRYP DepthFunc)(GLenum func);
	void (APIENTRYP PixelStoref)(GLenum pname, GLfloat param);
	void (APIENTRYP PixelStorei)(GLenum pname, GLint param);
	void (APIENTRYP ReadBuffer)(GLenum src);
	void (APIENTRYP ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetBooleanv)(GLenum pname, GLboolean *data);
	void (APIENTRYP GetDoublev)(GLenum pname, GLdouble *data);
	GLenum (APIENTRYP GetError)(void);
	void (APIENTRYP GetFloatv)(GLenum pname, GLfloat *data);
	void (APIENTRYP GetIntegerv)(GLenum pname, GLint *data);
	const GLubyte *(APIENTRYP GetString)(GLenum name);
	void (APIENTRYP GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
	void (APIENTRYP GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsEnabled)(GLenum cap);
	void (APIENTRYP DepthRange)(GLdouble near, GLdouble far);
	void (APIENTRYP Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP DrawArrays)(GLenum mode, GLint first, GLsizei count);
	void (APIENTRYP DrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP PolygonOffset)(GLfloat factor, GLfloat units);
	void (APIENTRYP CopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void (APIENTRYP CopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void (APIENTRYP CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP BindTexture)(GLenum target, GLuint texture);
	void (APIENTRYP DeleteTextures)(GLsizei n, const GLuint *textures);
	void (APIENTRYP GenTextures)(GLsizei n, GLuint *textures);
	GLboolean (APIENTRYP IsTexture)(GLuint texture);
	void (APIENTRYP DrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
	void (APIENTRYP TexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ActiveTexture)(GLenum texture);
	void (APIENTRYP SampleCoverage)(GLfloat value, GLboolean invert);
	void (APIENTRYP CompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImage)(GLenum target, GLint level, void *img);
	void (APIENTRYP BlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void (APIENTRYP MultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
	void (APIENTRYP MultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
	void (APIENTRYP PointParameterf)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfv)(GLenum pname, const GLfloat *params);
	void (APIENTRYP PointParameteri)(GLenum pname, GLint param);
	void (APIENTRYP PointParameteriv)(GLenum pname, const GLint *params);
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
	void (APIENTRYP GenQueries)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueries)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQuery)(GLuint id);
	void (APIENTRYP BeginQuery)(GLenum target, GLuint id);
	void (APIENTRYP EndQuery)(GLenum target);
	void (APIENTRYP GetQueryiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectiv)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params);
	void (APIENTRYP BindBuffer)(GLenum target, GLuint buffer);
	void (APIENTRYP DeleteBuffers)(GLsizei n, const GLuint *buffers);
	void (APIENTRYP GenBuffers)(GLsizei n, GLuint *buffers);
	GLboolean (APIENTRYP IsBuffer)(GLuint buffer);
	void (APIENTRYP BufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP BufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP GetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
	void *(APIENTRYP MapBuffer)(GLenum target, GLenum access);
	GLboolean (APIENTRYP UnmapBuffer)(GLenum target);
	void (APIENTRYP GetBufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetBufferPointerv)(GLenum target, GLenum pname, void **params);
	void (APIENTRYP BlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP DrawBuffers)(GLsizei n, const GLenum *bufs);
	void (APIENTRYP StencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void (APIENTRYP StencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask);
	void (APIENTRYP StencilMaskSeparate)(GLenum face, GLuint mask);
	void (APIENTRYP AttachShader)(GLuint program, GLuint shader);
	void (APIENTRYP BindAttribLocation)(GLuint program, GLuint index, const GLchar *name);
	void (APIENTRYP CompileShader)(GLuint shader);
	GLuint (APIENTRYP CreateProgram)(void);
	GLuint (APIENTRYP CreateShader)(GLenum type);
	void (APIENTRYP DeleteProgram)(GLuint program);
	void (APIENTRYP DeleteShader)(GLuint shader);
	void (APIENTRYP DetachShader)(GLuint program, GLuint shader);
	void (APIENTRYP DisableVertexAttribArray)(GLuint index);
	void (APIENTRYP EnableVertexAttribArray)(GLuint index);
	void (APIENTRYP GetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void (APIENTRYP GetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	GLint (APIENTRYP GetAttribLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetProgramiv)(GLuint program, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderiv)(GLuint shader, GLenum pname, GLint *params);
	void (APIENTRYP GetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP GetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	GLint (APIENTRYP GetUniformLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP GetUniformfv)(GLuint program, GLint location, GLfloat *params);
	void (APIENTRYP GetUniformiv)(GLuint program, GLint location, GLint *params);
	void (APIENTRYP GetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP GetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params);
	void (APIENTRYP GetVertexAttribiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer);
	GLboolean (APIENTRYP IsProgram)(GLuint program);
	GLboolean (APIENTRYP IsShader)(GLuint shader);
	void (APIENTRYP LinkProgram)(GLuint program);
	void (APIENTRYP ShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
	void (APIENTRYP UseProgram)(GLuint program);
	void (APIENTRYP Uniform1f)(GLint location, GLfloat v0);
	void (APIENTRYP Uniform2f)(GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP Uniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP Uniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP Uniform1i)(GLint location, GLint v0);
	void (APIENTRYP Uniform2i)(GLint location, GLint v0, GLint v1);
	void (APIENTRYP Uniform3i)(GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP Uniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP Uniform1fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform2fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform3fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform4fv)(GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP Uniform1iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform2iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform3iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP Uniform4iv)(GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP UniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ValidateProgram)(GLuint program);
	void (APIENTRYP VertexAttrib1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttrib1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib1f)(GLuint index, GLfloat x);
	void (APIENTRYP VertexAttrib1fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib1s)(GLuint index, GLshort x);
	void (APIENTRYP VertexAttrib1sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttrib2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib2f)(GLuint index, GLfloat x, GLfloat y);
	void (APIENTRYP VertexAttrib2fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib2s)(GLuint index, GLshort x, GLshort y);
	void (APIENTRYP VertexAttrib2sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttrib3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void (APIENTRYP VertexAttrib3fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z);
	void (APIENTRYP VertexAttrib3sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nbv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4Niv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4Nsv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void (APIENTRYP VertexAttrib4Nubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4Nuiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4Nusv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttrib4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttrib4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP VertexAttrib4fv)(GLuint index, const GLfloat *v);
	void (APIENTRYP VertexAttrib4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void (APIENTRYP VertexAttrib4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttrib4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttrib4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttrib4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP VertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
	void (APIENTRYP UniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP UniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void (APIENTRYP GetBooleani_v)(GLenum target, GLuint index, GLboolean *data);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
	void (APIENTRYP Enablei)(GLenum target, GLuint index);
	void (APIENTRYP Disablei)(GLenum target, GLuint index);
	GLboolean (APIENTRYP IsEnabledi)(GLenum target, GLuint index);
	void (APIENTRYP BeginTransformFeedback)(GLenum primitiveMode);
	void (APIENTRYP EndTransformFeedback)(void);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
	void (APIENTRYP GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void (APIENTRYP ClampColor)(GLenum target, GLenum clamp);
	void (APIENTRYP BeginConditionalRender)(GLuint id, GLenum mode);
	void (APIENTRYP EndConditionalRender)(void);
	void (APIENTRYP VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params);
	void (APIENTRYP VertexAttribI1i)(GLuint index, GLint x);
	void (APIENTRYP VertexAttribI2i)(GLuint index, GLint x, GLint y);
	void (APIENTRYP VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z);
	void (APIENTRYP VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
	void (APIENTRYP VertexAttribI1ui)(GLuint index, GLuint x);
	void (APIENTRYP VertexAttribI2ui)(GLuint index, GLuint x, GLuint y);
	void (APIENTRYP VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
	void (APIENTRYP VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void (APIENTRYP VertexAttribI1iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI2iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI3iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI4iv)(GLuint index, const GLint *v);
	void (APIENTRYP VertexAttribI1uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI2uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI3uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4uiv)(GLuint index, const GLuint *v);
	void (APIENTRYP VertexAttribI4bv)(GLuint index, const GLbyte *v);
	void (APIENTRYP VertexAttribI4sv)(GLuint index, const GLshort *v);
	void (APIENTRYP VertexAttribI4ubv)(GLuint index, const GLubyte *v);
	void (APIENTRYP VertexAttribI4usv)(GLuint index, const GLushort *v);
	void (APIENTRYP GetUniformuiv)(GLuint program, GLint location, GLuint *params);
	void (APIENTRYP BindFragDataLocation)(GLuint program, GLuint color, const GLchar *name);
	GLint (APIENTRYP GetFragDataLocation)(GLuint program, const GLchar *name);
	void (APIENTRYP Uniform1ui)(GLint location, GLuint v0);
	void (APIENTRYP Uniform2ui)(GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP Uniform1uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform2uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform3uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP Uniform4uiv)(GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP TexParameterIiv)(GLenum target, GLenum pname, const GLint *params);
	void (APIENTRYP TexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params);
	void (APIENTRYP GetTexParameterIiv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params);
	void (APIENTRYP ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	const GLubyte *(APIENTRYP GetStringi)(GLenum name, GLuint index);
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP BindVertexArray)(GLuint array);
	void (APIENTRYP DeleteVertexArrays)(GLsizei n, const GLuint *arrays);
	void (APIENTRYP GenVertexArrays)(GLsizei n, GLuint *arrays);
	GLboolean (APIENTRYP IsVertexArray)(GLuint array);
	void (APIENTRYP DrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
	void (APIENTRYP DrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
	void (APIENTRYP TexBuffer)(GLenum target, GLenum internalformat, GLuint buffer);
	void (APIENTRYP PrimitiveRestartIndex)(GLuint index);
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
	void (APIENTRYP ProvokingVertex)(GLenum mode);
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
	void (APIENTRYP GetInteger64i_v)(GLenum target, GLuint index, GLint64 *data);
	void (APIENTRYP GetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params);
	void (APIENTRYP FramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
	void (APIENTRYP VertexAttribDivisor)(GLuint index, GLuint divisor);
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP MinSampleShading)(GLfloat value);
	void (APIENTRYP BlendEquationi)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparatei)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunci)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparatei)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
	void (APIENTRYP ReleaseShaderCompiler)(void);
	void (APIENTRYP ShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
	void (APIENTRYP GetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
	void (APIENTRYP DepthRangef)(GLfloat n, GLfloat f);
	void (APIENTRYP ClearDepthf)(GLfloat d);
	void (APIENTRYP GetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
	void (APIENTRYP ProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP UseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
	void (APIENTRYP ActiveShaderProgram)(GLuint pipeline, GLuint program);
	GLuint (APIENTRYP CreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
	void (APIENTRYP BindProgramPipeline)(GLuint pipeline);
	void (APIENTRYP DeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
	void (APIENTRYP GenProgramPipelines)(GLsizei n, GLuint *pipelines);
	GLboolean (APIENTRYP IsProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
	void (APIENTRYP ProgramUniform1i)(GLuint program, GLint location, GLint v0);
	void (APIENTRYP ProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
	void (APIENTRYP ProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
	void (APIENTRYP ProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
	void (APIENTRYP ProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
	void (APIENTRYP ProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP ProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
	void (APIENTRYP ProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP ProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP ProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP ProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
	void (APIENTRYP ProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP ProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP ProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP ProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
	void (APIENTRYP ProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP ProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ValidateProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void (APIENTRYP VertexAttribL1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttribL1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
	void (APIENTRYP ViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
	void (APIENTRYP ViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
	void (APIENTRYP ViewportIndexedfv)(GLuint index, const GLfloat *v);
	void (APIENTRYP ScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
	void (APIENTRYP ScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
	void (APIENTRYP ScissorIndexedv)(GLuint index, const GLint *v);
	void (APIENTRYP DepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
	void (APIENTRYP DepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
	void (APIENTRYP GetFloati_v)(GLenum target, GLuint index, GLfloat *data);
	void (APIENTRYP GetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
	void (APIENTRYP DrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
	void (APIENTRYP GetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
	void (APIENTRYP BindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
	void (APIENTRYP MemoryBarrier)(GLbitfield barriers);
	void (APIENTRYP TexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP DrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
	void (APIENTRYP DrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
	void (APIENTRYP ClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
	void (APIENTRYP DispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
	void (APIENTRYP DispatchComputeIndirect)(GLintptr indirect);
	void (APIENTRYP CopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
	void (APIENTRYP FramebufferParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP GetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
	void (APIENTRYP InvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP InvalidateTexImage)(GLuint texture, GLint level);
	void (APIENTRYP InvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP InvalidateBufferData)(GLuint buffer);
	void (APIENTRYP InvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
	void (APIENTRYP InvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP MultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP MultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP GetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
	GLuint (APIENTRYP GetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP GetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
	GLint (APIENTRYP GetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
	GLint (APIENTRYP GetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP ShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
	void (APIENTRYP TexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP TexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
	void (APIENTRYP BindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
	void (APIENTRYP VertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void (APIENTRYP VertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
	void (APIENTRYP VertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
	void (APIENTRYP DebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
	void (APIENTRYP DebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
	void (APIENTRYP DebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
	GLuint (APIENTRYP GetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
	void (APIENTRYP PushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
	void (APIENTRYP PopDebugGroup)(void);
	void (APIENTRYP ObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP ObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP GetPointerv)(GLenum pname, void **params);
	void (APIENTRYP BufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
	void (APIENTRYP ClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
	void (APIENTRYP BindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
	void (APIENTRYP BindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
	void (APIENTRYP BindTextures)(GLuint first, GLsizei count, const GLuint *textures);
	void (APIENTRYP BindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
	void (APIENTRYP BindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
	void (APIENTRYP BindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
	void (APIENTRYP ClipControl)(GLenum origin, GLenum depth);
	void (APIENTRYP CreateTransformFeedbacks)(GLsizei n, GLuint *ids);
	void (APIENTRYP TransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP GetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
	void (APIENTRYP GetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
	void (APIENTRYP GetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
	void (APIENTRYP CreateBuffers)(GLsizei n, GLuint *buffers);
	void (APIENTRYP NamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
	void (APIENTRYP NamedBufferData)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP NamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP CopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP ClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
	void *(APIENTRYP MapNamedBuffer)(GLuint buffer, GLenum access);
	void *(APIENTRYP MapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
	GLboolean (APIENTRYP UnmapNamedBuffer)(GLuint buffer);
	void (APIENTRYP FlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP GetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
	void (APIENTRYP GetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
	void (APIENTRYP GetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
	void (APIENTRYP GetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
	void (APIENTRYP CreateFramebuffers)(GLsizei n, GLuint *framebuffers);
	void (APIENTRYP NamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP NamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
	void (APIENTRYP NamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP NamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void (APIENTRYP NamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
	void (APIENTRYP NamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
	void (APIENTRYP NamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
	void (APIENTRYP InvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
	void (APIENTRYP InvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	void (APIENTRYP BlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	GLenum (APIENTRYP CheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
	void (APIENTRYP GetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
	void (APIENTRYP GetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP CreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP NamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP NamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
	void (APIENTRYP CreateTextures)(GLenum target, GLsizei n, GLuint *textures);
	void (APIENTRYP TextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
	void (APIENTRYP TextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP TextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP TextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP CopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
	void (APIENTRYP TextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
	void (APIENTRYP TextureParameteri)(GLuint texture, GLenum pname, GLint param);
	void (APIENTRYP TextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
	void (APIENTRYP TextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
	void (APIENTRYP TextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
	void (APIENTRYP GenerateTextureMipmap)(GLuint texture);
	void (APIENTRYP BindTextureUnit)(GLuint unit, GLuint texture);
	void (APIENTRYP GetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
	void (APIENTRYP GetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
	void (APIENTRYP GetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
	void (APIENTRYP GetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
	void (APIENTRYP CreateVertexArrays)(GLsizei n, GLuint *arrays);
	void (APIENTRYP DisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
	void (APIENTRYP EnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
	void (APIENTRYP VertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
	void (APIENTRYP VertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
	void (APIENTRYP VertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
	void (APIENTRYP VertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
	void (APIENTRYP VertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void (APIENTRYP VertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
	void (APIENTRYP GetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
	void (APIENTRYP GetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
	void (APIENTRYP GetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
	void (APIENTRYP CreateSamplers)(GLsizei n, GLuint *samplers);
	void (APIENTRYP CreateProgramPipelines)(GLsizei n, GLuint *pipelines);
	void (APIENTRYP CreateQueries)(GLenum target, GLsizei n, GLuint *ids);
	void (APIENTRYP GetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP GetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP GetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP GetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP MemoryBarrierByRegion)(GLbitfield barriers);
	void (APIENTRYP GetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
	GLenum (APIENTRYP GetGraphicsResetStatus)(void);
	void (APIENTRYP GetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
	void (APIENTRYP GetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
	void (APIENTRYP GetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
	void (APIENTRYP ReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
	void (APIENTRYP TextureBarrier)(void);
};

/* GL_ARB_ES2_compatibility */
struct gl_ARB_ES2_compatibility
{
	void (APIENTRYP ReleaseShaderCompiler)(void);
	void (APIENTRYP ShaderBinary)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
	void (APIENTRYP GetShaderPrecisionFormat)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
	void (APIENTRYP DepthRangef)(GLfloat n, GLfloat f);
	void (APIENTRYP ClearDepthf)(GLfloat d);
};

/* GL_ARB_ES3_1_compatibility */
struct gl_ARB_ES3_1_compatibility
{
	void (APIENTRYP MemoryBarrierByRegion)(GLbitfield barriers);
};

/* GL_ARB_ES3_2_compatibility */
struct gl_ARB_ES3_2_compatibility
{
	void (APIENTRYP PrimitiveBoundingBoxARB)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
};

/* GL_ARB_base_instance */
struct gl_ARB_base_instance
{
	void (APIENTRYP DrawArraysInstancedBaseInstance)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
	void (APIENTRYP DrawElementsInstancedBaseVertexBaseInstance)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
};

/* GL_ARB_bindless_texture */
struct gl_ARB_bindless_texture
{
	GLuint64 (APIENTRYP GetTextureHandleARB)(GLuint texture);
	GLuint64 (APIENTRYP GetTextureSamplerHandleARB)(GLuint texture, GLuint sampler);
	void (APIENTRYP MakeTextureHandleResidentARB)(GLuint64 handle);
	void (APIENTRYP MakeTextureHandleNonResidentARB)(GLuint64 handle);
	GLuint64 (APIENTRYP GetImageHandleARB)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
	void (APIENTRYP MakeImageHandleResidentARB)(GLuint64 handle, GLenum access);
	void (APIENTRYP MakeImageHandleNonResidentARB)(GLuint64 handle);
	void (APIENTRYP UniformHandleui64ARB)(GLint location, GLuint64 value);
	void (APIENTRYP UniformHandleui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP ProgramUniformHandleui64ARB)(GLuint program, GLint location, GLuint64 value);
	void (APIENTRYP ProgramUniformHandleui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
	GLboolean (APIENTRYP IsTextureHandleResidentARB)(GLuint64 handle);
	GLboolean (APIENTRYP IsImageHandleResidentARB)(GLuint64 handle);
	void (APIENTRYP VertexAttribL1ui64ARB)(GLuint index, GLuint64EXT x);
	void (APIENTRYP VertexAttribL1ui64vARB)(GLuint index, const GLuint64EXT *v);
	void (APIENTRYP GetVertexAttribLui64vARB)(GLuint index, GLenum pname, GLuint64EXT *params);
};

/* GL_ARB_blend_func_extended */
struct gl_ARB_blend_func_extended
{
	void (APIENTRYP BindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
	GLint (APIENTRYP GetFragDataIndex)(GLuint program, const GLchar *name);
};

/* GL_ARB_buffer_storage */
struct gl_ARB_buffer_storage
{
	void (APIENTRYP BufferStorage)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
};

/* GL_ARB_cl_event */
struct gl_ARB_cl_event
{
	GLsync (APIENTRYP CreateSyncFromCLeventARB)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
};

/* GL_ARB_clear_buffer_object */
struct gl_ARB_clear_buffer_object
{
	void (APIENTRYP ClearBufferData)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearBufferSubData)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
};

/* GL_ARB_clear_texture */
struct gl_ARB_clear_texture
{
	void (APIENTRYP ClearTexImage)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
};

/* GL_ARB_clip_control */
struct gl_ARB_clip_control
{
	void (APIENTRYP ClipControl)(GLenum origin, GLenum depth);
};

/* GL_ARB_color_buffer_float */
struct gl_ARB_color_buffer_float
{
	void (APIENTRYP ClampColorARB)(GLenum target, GLenum clamp);
};

/* GL_ARB_compute_shader */
struct gl_ARB_compute_shader
{
	void (APIENTRYP DispatchCompute)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
	void (APIENTRYP DispatchComputeIndirect)(GLintptr indirect);
};

/* GL_ARB_compute_variable_group_size */
struct gl_ARB_compute_variable_group_size
{
	void (APIENTRYP DispatchComputeGroupSizeARB)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
};

/* GL_ARB_copy_buffer */
struct gl_ARB_copy_buffer
{
	void (APIENTRYP CopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
};

/* GL_ARB_copy_image */
struct gl_ARB_copy_image
{
	void (APIENTRYP CopyImageSubData)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
};

/* GL_ARB_debug_output */
struct gl_ARB_debug_output
{
	void (APIENTRYP DebugMessageControlARB)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
	void (APIENTRYP DebugMessageInsertARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
	void (APIENTRYP DebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void *userParam);
	GLuint (APIENTRYP GetDebugMessageLogARB)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
};

/* GL_ARB_direct_state_access */
struct gl_ARB_direct_state_access
{
	void (APIENTRYP CreateTransformFeedbacks)(GLsizei n, GLuint *ids);
	void (APIENTRYP TransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
	void (APIENTRYP TransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP GetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint *param);
	void (APIENTRYP GetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
	void (APIENTRYP GetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
	void (APIENTRYP CreateBuffers)(GLsizei n, GLuint *buffers);
	void (APIENTRYP NamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
	void (APIENTRYP NamedBufferData)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
	void (APIENTRYP NamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
	void (APIENTRYP CopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
	void (APIENTRYP ClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
	void (APIENTRYP ClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
	void *(APIENTRYP MapNamedBuffer)(GLuint buffer, GLenum access);
	void *(APIENTRYP MapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
	GLboolean (APIENTRYP UnmapNamedBuffer)(GLuint buffer);
	void (APIENTRYP FlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP GetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint *params);
	void (APIENTRYP GetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 *params);
	void (APIENTRYP GetNamedBufferPointerv)(GLuint buffer, GLenum pname, void **params);
	void (APIENTRYP GetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
	void (APIENTRYP CreateFramebuffers)(GLsizei n, GLuint *framebuffers);
	void (APIENTRYP NamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP NamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
	void (APIENTRYP NamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP NamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void (APIENTRYP NamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
	void (APIENTRYP NamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
	void (APIENTRYP NamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
	void (APIENTRYP InvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
	void (APIENTRYP InvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP ClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
	void (APIENTRYP ClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
	void (APIENTRYP ClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
	void (APIENTRYP ClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
	void (APIENTRYP BlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	GLenum (APIENTRYP CheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
	void (APIENTRYP GetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint *param);
	void (APIENTRYP GetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP CreateRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP NamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP NamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint *params);
	void (APIENTRYP CreateTextures)(GLenum target, GLsizei n, GLuint *textures);
	void (APIENTRYP TextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
	void (APIENTRYP TextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP TextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP TextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP TextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP TextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
	void (APIENTRYP CompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void (APIENTRYP CopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP CopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void (APIENTRYP TextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
	void (APIENTRYP TextureParameterfv)(GLuint texture, GLenum pname, const GLfloat *param);
	void (APIENTRYP TextureParameteri)(GLuint texture, GLenum pname, GLint param);
	void (APIENTRYP TextureParameterIiv)(GLuint texture, GLenum pname, const GLint *params);
	void (APIENTRYP TextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint *params);
	void (APIENTRYP TextureParameteriv)(GLuint texture, GLenum pname, const GLint *param);
	void (APIENTRYP GenerateTextureMipmap)(GLuint texture);
	void (APIENTRYP BindTextureUnit)(GLuint unit, GLuint texture);
	void (APIENTRYP GetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint *params);
	void (APIENTRYP GetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat *params);
	void (APIENTRYP GetTextureParameterIiv)(GLuint texture, GLenum pname, GLint *params);
	void (APIENTRYP GetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint *params);
	void (APIENTRYP GetTextureParameteriv)(GLuint texture, GLenum pname, GLint *params);
	void (APIENTRYP CreateVertexArrays)(GLsizei n, GLuint *arrays);
	void (APIENTRYP DisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
	void (APIENTRYP EnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
	void (APIENTRYP VertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
	void (APIENTRYP VertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
	void (APIENTRYP VertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
	void (APIENTRYP VertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
	void (APIENTRYP VertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void (APIENTRYP VertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
	void (APIENTRYP GetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint *param);
	void (APIENTRYP GetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
	void (APIENTRYP GetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
	void (APIENTRYP CreateSamplers)(GLsizei n, GLuint *samplers);
	void (APIENTRYP CreateProgramPipelines)(GLsizei n, GLuint *pipelines);
	void (APIENTRYP CreateQueries)(GLenum target, GLsizei n, GLuint *ids);
	void (APIENTRYP GetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP GetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP GetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
	void (APIENTRYP GetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
};

/* GL_ARB_draw_buffers */
struct gl_ARB_draw_buffers
{
	void (APIENTRYP DrawBuffersARB)(GLsizei n, const GLenum *bufs);
};

/* GL_ARB_draw_buffers_blend */
struct gl_ARB_draw_buffers_blend
{
	void (APIENTRYP BlendEquationiARB)(GLuint buf, GLenum mode);
	void (APIENTRYP BlendEquationSeparateiARB)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void (APIENTRYP BlendFunciARB)(GLuint buf, GLenum src, GLenum dst);
	void (APIENTRYP BlendFuncSeparateiARB)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
};

/* GL_ARB_draw_elements_base_vertex */
struct gl_ARB_draw_elements_base_vertex
{
	void (APIENTRYP DrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
	void (APIENTRYP DrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
	void (APIENTRYP MultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
};

/* GL_ARB_draw_indirect */
struct gl_ARB_draw_indirect
{
	void (APIENTRYP DrawArraysIndirect)(GLenum mode, const void *indirect);
	void (APIENTRYP DrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect);
};

/* GL_ARB_draw_instanced */
struct gl_ARB_draw_instanced
{
	void (APIENTRYP DrawArraysInstancedARB)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
	void (APIENTRYP DrawElementsInstancedARB)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
};

/* GL_ARB_fragment_program */
struct gl_ARB_fragment_program
{
	void (APIENTRYP ProgramStringARB)(GLenum target, GLenum format, GLsizei len, const void *string);
	void (APIENTRYP BindProgramARB)(GLenum target, GLuint program);
	void (APIENTRYP DeleteProgramsARB)(GLsizei n, const GLuint *programs);
	void (APIENTRYP GenProgramsARB)(GLsizei n, GLuint *programs);
	void (APIENTRYP ProgramEnvParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP ProgramEnvParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
	void (APIENTRYP ProgramEnvParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP ProgramEnvParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
	void (APIENTRYP ProgramLocalParameter4dARB)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP ProgramLocalParameter4dvARB)(GLenum target, GLuint index, const GLdouble *params);
	void (APIENTRYP ProgramLocalParameter4fARB)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void (APIENTRYP ProgramLocalParameter4fvARB)(GLenum target, GLuint index, const GLfloat *params);
	void (APIENTRYP GetProgramEnvParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
	void (APIENTRYP GetProgramEnvParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
	void (APIENTRYP GetProgramLocalParameterdvARB)(GLenum target, GLuint index, GLdouble *params);
	void (APIENTRYP GetProgramLocalParameterfvARB)(GLenum target, GLuint index, GLfloat *params);
	void (APIENTRYP GetProgramivARB)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetProgramStringARB)(GLenum target, GLenum pname, void *string);
	GLboolean (APIENTRYP IsProgramARB)(GLuint program);
};

/* GL_ARB_framebuffer_no_attachments */
struct gl_ARB_framebuffer_no_attachments
{
	void (APIENTRYP FramebufferParameteri)(GLenum target, GLenum pname, GLint param);
	void (APIENTRYP GetFramebufferParameteriv)(GLenum target, GLenum pname, GLint *params);
};

/* GL_ARB_framebuffer_object */
struct gl_ARB_framebuffer_object
{
	GLboolean (APIENTRYP IsRenderbuffer)(GLuint renderbuffer);
	void (APIENTRYP BindRenderbuffer)(GLenum target, GLuint renderbuffer);
	void (APIENTRYP DeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers);
	void (APIENTRYP GenRenderbuffers)(GLsizei n, GLuint *renderbuffers);
	void (APIENTRYP RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params);
	GLboolean (APIENTRYP IsFramebuffer)(GLuint framebuffer);
	void (APIENTRYP BindFramebuffer)(GLenum target, GLuint framebuffer);
	void (APIENTRYP DeleteFramebuffers)(GLsizei n, const GLuint *framebuffers);
	void (APIENTRYP GenFramebuffers)(GLsizei n, GLuint *framebuffers);
	GLenum (APIENTRYP CheckFramebufferStatus)(GLenum target);
	void (APIENTRYP FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void (APIENTRYP FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void (APIENTRYP GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void (APIENTRYP GenerateMipmap)(GLenum target);
	void (APIENTRYP BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void (APIENTRYP RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
};

/* GL_ARB_geometry_shader4 */
struct gl_ARB_geometry_shader4
{
	void (APIENTRYP ProgramParameteriARB)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP FramebufferTextureARB)(GLenum target, GLenum attachment, GLuint texture, GLint level);
	void (APIENTRYP FramebufferTextureLayerARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void (APIENTRYP FramebufferTextureFaceARB)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
};

/* GL_ARB_get_program_binary */
struct gl_ARB_get_program_binary
{
	void (APIENTRYP GetProgramBinary)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
	void (APIENTRYP ProgramBinary)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
};

/* GL_ARB_get_texture_sub_image */
struct gl_ARB_get_texture_sub_image
{
	void (APIENTRYP GetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
	void (APIENTRYP GetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
};

/* GL_ARB_gpu_shader_fp64 */
struct gl_ARB_gpu_shader_fp64
{
	void (APIENTRYP Uniform1d)(GLint location, GLdouble x);
	void (APIENTRYP Uniform2d)(GLint location, GLdouble x, GLdouble y);
	void (APIENTRYP Uniform3d)(GLint location, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP Uniform4d)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP Uniform1dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform2dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform3dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP Uniform4dv)(GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP UniformMatrix2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix2x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix3x4dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x2dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP UniformMatrix4x3dv)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP GetUniformdv)(GLuint program, GLint location, GLdouble *params);
};

/* GL_ARB_gpu_shader_int64 */
struct gl_ARB_gpu_shader_int64
{
	void (APIENTRYP Uniform1i64ARB)(GLint location, GLint64 x);
	void (APIENTRYP Uniform2i64ARB)(GLint location, GLint64 x, GLint64 y);
	void (APIENTRYP Uniform3i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z);
	void (APIENTRYP Uniform4i64ARB)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
	void (APIENTRYP Uniform1i64vARB)(GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP Uniform2i64vARB)(GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP Uniform3i64vARB)(GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP Uniform4i64vARB)(GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP Uniform1ui64ARB)(GLint location, GLuint64 x);
	void (APIENTRYP Uniform2ui64ARB)(GLint location, GLuint64 x, GLuint64 y);
	void (APIENTRYP Uniform3ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
	void (APIENTRYP Uniform4ui64ARB)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
	void (APIENTRYP Uniform1ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP Uniform2ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP Uniform3ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP Uniform4ui64vARB)(GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP GetUniformi64vARB)(GLuint program, GLint location, GLint64 *params);
	void (APIENTRYP GetUniformui64vARB)(GLuint program, GLint location, GLuint64 *params);
	void (APIENTRYP GetnUniformi64vARB)(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
	void (APIENTRYP GetnUniformui64vARB)(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
	void (APIENTRYP ProgramUniform1i64ARB)(GLuint program, GLint location, GLint64 x);
	void (APIENTRYP ProgramUniform2i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y);
	void (APIENTRYP ProgramUniform3i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
	void (APIENTRYP ProgramUniform4i64ARB)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
	void (APIENTRYP ProgramUniform1i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP ProgramUniform2i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP ProgramUniform3i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP ProgramUniform4i64vARB)(GLuint program, GLint location, GLsizei count, const GLint64 *value);
	void (APIENTRYP ProgramUniform1ui64ARB)(GLuint program, GLint location, GLuint64 x);
	void (APIENTRYP ProgramUniform2ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
	void (APIENTRYP ProgramUniform3ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
	void (APIENTRYP ProgramUniform4ui64ARB)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
	void (APIENTRYP ProgramUniform1ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP ProgramUniform2ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP ProgramUniform3ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
	void (APIENTRYP ProgramUniform4ui64vARB)(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
};

/* GL_ARB_imaging */
struct gl_ARB_imaging
{
	void (APIENTRYP BlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void (APIENTRYP BlendEquation)(GLenum mode);
};

/* GL_ARB_indirect_parameters */
struct gl_ARB_indirect_parameters
{
	void (APIENTRYP MultiDrawArraysIndirectCountARB)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
	void (APIENTRYP MultiDrawElementsIndirectCountARB)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
};

/* GL_ARB_instanced_arrays */
struct gl_ARB_instanced_arrays
{
	void (APIENTRYP VertexAttribDivisorARB)(GLuint index, GLuint divisor);
};

/* GL_ARB_internalformat_query */
struct gl_ARB_internalformat_query
{
	void (APIENTRYP GetInternalformativ)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
};

/* GL_ARB_internalformat_query2 */
struct gl_ARB_internalformat_query2
{
	void (APIENTRYP GetInternalformati64v)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
};

/* GL_ARB_invalidate_subdata */
struct gl_ARB_invalidate_subdata
{
	void (APIENTRYP InvalidateTexSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
	void (APIENTRYP InvalidateTexImage)(GLuint texture, GLint level);
	void (APIENTRYP InvalidateBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr length);
	void (APIENTRYP InvalidateBufferData)(GLuint buffer);
	void (APIENTRYP InvalidateFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
	void (APIENTRYP InvalidateSubFramebuffer)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
};

/* GL_ARB_map_buffer_range */
struct gl_ARB_map_buffer_range
{
	void *(APIENTRYP MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	void (APIENTRYP FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length);
};

/* GL_ARB_multi_bind */
struct gl_ARB_multi_bind
{
	void (APIENTRYP BindBuffersBase)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
	void (APIENTRYP BindBuffersRange)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
	void (APIENTRYP BindTextures)(GLuint first, GLsizei count, const GLuint *textures);
	void (APIENTRYP BindSamplers)(GLuint first, GLsizei count, const GLuint *samplers);
	void (APIENTRYP BindImageTextures)(GLuint first, GLsizei count, const GLuint *textures);
	void (APIENTRYP BindVertexBuffers)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
};

/* GL_ARB_multi_draw_indirect */
struct gl_ARB_multi_draw_indirect
{
	void (APIENTRYP MultiDrawArraysIndirect)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
	void (APIENTRYP MultiDrawElementsIndirect)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
};

/* GL_ARB_multisample */
struct gl_ARB_multisample
{
	void (APIENTRYP SampleCoverageARB)(GLfloat value, GLboolean invert);
};

/* GL_ARB_occlusion_query */
struct gl_ARB_occlusion_query
{
	void (APIENTRYP GenQueriesARB)(GLsizei n, GLuint *ids);
	void (APIENTRYP DeleteQueriesARB)(GLsizei n, const GLuint *ids);
	GLboolean (APIENTRYP IsQueryARB)(GLuint id);
	void (APIENTRYP BeginQueryARB)(GLenum target, GLuint id);
	void (APIENTRYP EndQueryARB)(GLenum target);
	void (APIENTRYP GetQueryivARB)(GLenum target, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectivARB)(GLuint id, GLenum pname, GLint *params);
	void (APIENTRYP GetQueryObjectuivARB)(GLuint id, GLenum pname, GLuint *params);
};

/* GL_ARB_parallel_shader_compile */
struct gl_ARB_parallel_shader_compile
{
	void (APIENTRYP MaxShaderCompilerThreadsARB)(GLuint count);
};

/* GL_ARB_point_parameters */
struct gl_ARB_point_parameters
{
	void (APIENTRYP PointParameterfARB)(GLenum pname, GLfloat param);
	void (APIENTRYP PointParameterfvARB)(GLenum pname, const GLfloat *params);
};

/* GL_ARB_program_interface_query */
struct gl_ARB_program_interface_query
{
	void (APIENTRYP GetProgramInterfaceiv)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
	GLuint (APIENTRYP GetProgramResourceIndex)(GLuint program, GLenum programInterface, const GLchar *name);
	void (APIENTRYP GetProgramResourceName)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetProgramResourceiv)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
	GLint (APIENTRYP GetProgramResourceLocation)(GLuint program, GLenum programInterface, const GLchar *name);
	GLint (APIENTRYP GetProgramResourceLocationIndex)(GLuint program, GLenum programInterface, const GLchar *name);
};

/* GL_ARB_provoking_vertex */
struct gl_ARB_provoking_vertex
{
	void (APIENTRYP ProvokingVertex)(GLenum mode);
};

/* GL_ARB_robustness */
struct gl_ARB_robustness
{
	GLenum (APIENTRYP GetGraphicsResetStatusARB)(void);
	void (APIENTRYP GetnTexImageARB)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
	void (APIENTRYP ReadnPixelsARB)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
	void (APIENTRYP GetnCompressedTexImageARB)(GLenum target, GLint lod, GLsizei bufSize, void *img);
	void (APIENTRYP GetnUniformfvARB)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
	void (APIENTRYP GetnUniformivARB)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetnUniformuivARB)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
	void (APIENTRYP GetnUniformdvARB)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
};

/* GL_ARB_sample_locations */
struct gl_ARB_sample_locations
{
	void (APIENTRYP FramebufferSampleLocationsfvARB)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
	void (APIENTRYP NamedFramebufferSampleLocationsfvARB)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
	void (APIENTRYP EvaluateDepthValuesARB)(void);
};

/* GL_ARB_sample_shading */
struct gl_ARB_sample_shading
{
	void (APIENTRYP MinSampleShadingARB)(GLfloat value);
};

/* GL_ARB_sampler_objects */
struct gl_ARB_sampler_objects
{
	void (APIENTRYP GenSamplers)(GLsizei count, GLuint *samplers);
	void (APIENTRYP DeleteSamplers)(GLsizei count, const GLuint *samplers);
	GLboolean (APIENTRYP IsSampler)(GLuint sampler);
	void (APIENTRYP BindSampler)(GLuint unit, GLuint sampler);
	void (APIENTRYP SamplerParameteri)(GLuint sampler, GLenum pname, GLint param);
	void (APIENTRYP SamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param);
	void (APIENTRYP SamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param);
	void (APIENTRYP SamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param);
	void (APIENTRYP SamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param);
	void (APIENTRYP GetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params);
	void (APIENTRYP GetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params);
	void (APIENTRYP GetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params);
};

/* GL_ARB_separate_shader_objects */
struct gl_ARB_separate_shader_objects
{
	void (APIENTRYP UseProgramStages)(GLuint pipeline, GLbitfield stages, GLuint program);
	void (APIENTRYP ActiveShaderProgram)(GLuint pipeline, GLuint program);
	GLuint (APIENTRYP CreateShaderProgramv)(GLenum type, GLsizei count, const GLchar *const*strings);
	void (APIENTRYP BindProgramPipeline)(GLuint pipeline);
	void (APIENTRYP DeleteProgramPipelines)(GLsizei n, const GLuint *pipelines);
	void (APIENTRYP GenProgramPipelines)(GLsizei n, GLuint *pipelines);
	GLboolean (APIENTRYP IsProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineiv)(GLuint pipeline, GLenum pname, GLint *params);
	void (APIENTRYP ProgramParameteri)(GLuint program, GLenum pname, GLint value);
	void (APIENTRYP ProgramUniform1i)(GLuint program, GLint location, GLint v0);
	void (APIENTRYP ProgramUniform1iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform1f)(GLuint program, GLint location, GLfloat v0);
	void (APIENTRYP ProgramUniform1fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform1d)(GLuint program, GLint location, GLdouble v0);
	void (APIENTRYP ProgramUniform1dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform1ui)(GLuint program, GLint location, GLuint v0);
	void (APIENTRYP ProgramUniform1uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform2i)(GLuint program, GLint location, GLint v0, GLint v1);
	void (APIENTRYP ProgramUniform2iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform2f)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void (APIENTRYP ProgramUniform2fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform2d)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
	void (APIENTRYP ProgramUniform2dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform2ui)(GLuint program, GLint location, GLuint v0, GLuint v1);
	void (APIENTRYP ProgramUniform2uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform3i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void (APIENTRYP ProgramUniform3iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform3f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void (APIENTRYP ProgramUniform3fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform3d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
	void (APIENTRYP ProgramUniform3dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform3ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
	void (APIENTRYP ProgramUniform3uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniform4i)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void (APIENTRYP ProgramUniform4iv)(GLuint program, GLint location, GLsizei count, const GLint *value);
	void (APIENTRYP ProgramUniform4f)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void (APIENTRYP ProgramUniform4fv)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
	void (APIENTRYP ProgramUniform4d)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
	void (APIENTRYP ProgramUniform4dv)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
	void (APIENTRYP ProgramUniform4ui)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void (APIENTRYP ProgramUniform4uiv)(GLuint program, GLint location, GLsizei count, const GLuint *value);
	void (APIENTRYP ProgramUniformMatrix2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x2fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix3x4fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix4x3fv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void (APIENTRYP ProgramUniformMatrix2x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix2x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x2dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix3x4dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ProgramUniformMatrix4x3dv)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
	void (APIENTRYP ValidateProgramPipeline)(GLuint pipeline);
	void (APIENTRYP GetProgramPipelineInfoLog)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
};

/* GL_ARB_shader_atomic_counters */
struct gl_ARB_shader_atomic_counters
{
	void (APIENTRYP GetActiveAtomicCounterBufferiv)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
};

/* GL_ARB_shader_image_load_store */
struct gl_ARB_shader_image_load_store
{
	void (APIENTRYP BindImageTexture)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
	void (APIENTRYP MemoryBarrier)(GLbitfield barriers);
};

/* GL_ARB_shader_storage_buffer_object */
struct gl_ARB_shader_storage_buffer_object
{
	void (APIENTRYP ShaderStorageBlockBinding)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
};

/* GL_ARB_shader_subroutine */
struct gl_ARB_shader_subroutine
{
	GLint (APIENTRYP GetSubroutineUniformLocation)(GLuint program, GLenum shadertype, const GLchar *name);
	GLuint (APIENTRYP GetSubroutineIndex)(GLuint program, GLenum shadertype, const GLchar *name);
	void (APIENTRYP GetActiveSubroutineUniformiv)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
	void (APIENTRYP GetActiveSubroutineUniformName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP GetActiveSubroutineName)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
	void (APIENTRYP UniformSubroutinesuiv)(GLenum shadertype, GLsizei count, const GLuint *indices);
	void (APIENTRYP GetUniformSubroutineuiv)(GLenum shadertype, GLint location, GLuint *params);
	void (APIENTRYP GetProgramStageiv)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
};

/* GL_ARB_shading_language_include */
struct gl_ARB_shading_language_include
{
	void (APIENTRYP NamedStringARB)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
	void (APIENTRYP DeleteNamedStringARB)(GLint namelen, const GLchar *name);
	void (APIENTRYP CompileShaderIncludeARB)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
	GLboolean (APIENTRYP IsNamedStringARB)(GLint namelen, const GLchar *name);
	void (APIENTRYP GetNamedStringARB)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
	void (APIENTRYP GetNamedStringivARB)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
};

/* GL_ARB_sparse_buffer */
struct gl_ARB_sparse_buffer
{
	void (APIENTRYP BufferPageCommitmentARB)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
	void (APIENTRYP NamedBufferPageCommitmentEXT)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
	void (APIENTRYP NamedBufferPageCommitmentARB)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
};

/* GL_ARB_sparse_texture */
struct gl_ARB_sparse_texture
{
	void (APIENTRYP TexPageCommitmentARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
};

/* GL_ARB_gl_spirv */
struct gl_ARB_gl_spirv
{
	void (APIENTRYP SpecializeShaderARB)(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
};

/* GL_ARB_sync */
struct gl_ARB_sync
{
	GLsync (APIENTRYP FenceSync)(GLenum condition, GLbitfield flags);
	GLboolean (APIENTRYP IsSync)(GLsync sync);
	void (APIENTRYP DeleteSync)(GLsync sync);
	GLenum (APIENTRYP ClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP WaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
	void (APIENTRYP GetInteger64v)(GLenum pname, GLint64 *data);
	void (APIENTRYP GetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
};

/* GL_ARB_tessellation_shader */
struct gl_ARB_tessellation_shader
{
	void (APIENTRYP PatchParameteri)(GLenum pname, GLint value);
	void (APIENTRYP PatchParameterfv)(GLenum pname, const GLfloat *values);
};

/* GL_ARB_texture_barrier */
struct gl_ARB_texture_barrier
{
	void (APIENTRYP TextureBarrier)(void);
};

/* GL_ARB_texture_buffer_object */
struct gl_ARB_texture_buffer_object
{
	void (APIENTRYP TexBufferARB)(GLenum target, GLenum internalformat, GLuint buffer);
};

/* GL_ARB_texture_buffer_range */
struct gl_ARB_texture_buffer_range
{
	void (APIENTRYP TexBufferRange)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
};

/* GL_ARB_texture_compression */
struct gl_ARB_texture_compression
{
	void (APIENTRYP CompressedTexImage3DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage2DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexImage1DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage3DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage2DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP CompressedTexSubImage1DARB)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
	void (APIENTRYP GetCompressedTexImageARB)(GLenum target, GLint level, void *img);
};

/* GL_ARB_texture_multisample */
struct gl_ARB_texture_multisample
{
	void (APIENTRYP TexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
	void (APIENTRYP GetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val);
	void (APIENTRYP SampleMaski)(GLuint maskNumber, GLbitfield mask);
};

/* GL_ARB_texture_storage */
struct gl_ARB_texture_storage
{
	void (APIENTRYP TexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
	void (APIENTRYP TexStorage2D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void (APIENTRYP TexStorage3D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
};

/* GL_ARB_texture_storage_multisample */
struct gl_ARB_texture_storage_multisample
{
	void (APIENTRYP TexStorage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void (APIENTRYP TexStorage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
};

/* GL_ARB_texture_view */
struct gl_ARB_texture_view
{
	void (APIENTRYP TextureView)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
};

/* GL_ARB_timer_query */
struct gl_ARB_timer_query
{
	void (APIENTRYP QueryCounter)(GLuint id, GLenum target);
	void (APIENTRYP GetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params);
	void (APIENTRYP GetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params);
};

/* GL_ARB_transform_feedback2 */
struct gl_ARB_transform_feedback2
{
	void (APIENTRYP BindTransformFeedback)(GLenum target, GLuint id);
	void (APIENTRYP DeleteTransformFeedbacks)(GLsizei n, const GLuint *ids);
	void (APIENTRYP GenTransformFeedbacks)(GLsizei n, GLuint *ids);
	GLboolean (APIENTRYP IsTransformFeedback)(GLuint id);
	void (APIENTRYP PauseTransformFeedback)(void);
	void (APIENTRYP ResumeTransformFeedback)(void);
	void (APIENTRYP DrawTransformFeedback)(GLenum mode, GLuint id);
};

/* GL_ARB_transform_feedback3 */
struct gl_ARB_transform_feedback3
{
	void (APIENTRYP DrawTransformFeedbackStream)(GLenum mode, GLuint id, GLuint stream);
	void (APIENTRYP BeginQueryIndexed)(GLenum target, GLuint index, GLuint id);
	void (APIENTRYP EndQueryIndexed)(GLenum target, GLuint index);
	void (APIENTRYP GetQueryIndexediv)(GLenum target, GLuint index, GLenum pname, GLint *params);
};

/* GL_ARB_transform_feedback_instanced */
struct gl_ARB_transform_feedback_instanced
{
	void (APIENTRYP DrawTransformFeedbackInstanced)(GLenum mode, GLuint id, GLsizei instancecount);
	void (APIENTRYP DrawTransformFeedbackStreamInstanced)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
};

/* GL_ARB_uniform_buffer_object */
struct gl_ARB_uniform_buffer_object
{
	void (APIENTRYP GetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
	void (APIENTRYP GetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
	GLuint (APIENTRYP GetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName);
	void (APIENTRYP GetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
	void (APIENTRYP GetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
	void (APIENTRYP UniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void (APIENTRYP BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void (APIENTRYP BindBufferBase)(GLenum target, GLuint index, GLuint buffer);
	void (APIENTRYP GetIntegeri_v)(GLenum target, GLuint index, GLint *data);
};

/* GL_ARB_vertex_attrib_64bit */
struct gl_ARB_vertex_attrib_64bit
{
	void (APIENTRYP VertexAttribL1d)(GLuint index, GLdouble x);
	void (APIENTRYP VertexAttribL2d)(GLuint index, GLdouble x, GLdouble y);
	void (APIENTRYP VertexAttribL3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void (APIENTRYP VertexAttribL4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void (APIENTRYP VertexAttribL1dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL2dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL3dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribL4dv)(GLuint index, const GLdouble *v);
	void (APIENTRYP VertexAttribLPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
	void (APIENTRYP GetVertexAttribLdv)(GLuint index, GLenum pname, GLdouble *params);
};

/* GL_ARB_vertex_attrib_binding */
struct gl_ARB_vertex_attrib_binding
{
	void (APIENTRYP BindVertexBuffer)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
	void (APIENTRYP VertexAttribFormat)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void (APIENTRYP VertexAttribIFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribLFormat)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void (APIENTRYP VertexAttribBinding)(GLuint attribindex, GLuint bindingindex);
	void (APIENTRYP VertexBindingDivisor)(GLuint bindingindex, GLuint divisor);
};

/* GL_ARB_vertex_type_2_10_10_10_rev */
struct gl_ARB_vertex_type_2_10_10_10_rev
{
	void (APIENTRYP VertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
	void (APIENTRYP VertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
	void (APIENTRYP VertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
};

/* GL_ARB_viewport_array */
struct gl_ARB_viewport_array
{
	void (APIENTRYP ViewportArrayv)(GLuint first, GLsizei count, const GLfloat *v);
	void (APIENTRYP ViewportIndexedf)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
	void (APIENTRYP ViewportIndexedfv)(GLuint index, const GLfloat *v);
	void (APIENTRYP ScissorArrayv)(GLuint first, GLsizei count, const GLint *v);
	void (APIENTRYP ScissorIndexed)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
	void (APIENTRYP ScissorIndexedv)(GLuint index, const GLint *v);
	void (APIENTRYP DepthRangeArrayv)(GLuint first, GLsizei count, const GLdouble *v);
	void (APIENTRYP DepthRangeIndexed)(GLuint index, GLdouble n, GLdouble f);
	void (APIENTRYP GetFloati_v)(GLenum target, GLuint index, GLfloat *data);
	void (APIENTRYP GetDoublei_v)(GLenum target, GLuint index, GLdouble *data);
};

/* GL_KHR_blend_equation_advanced */
struct gl_KHR_blend_equation_advanced
{
	void (APIENTRYP BlendBarrierKHR)(void);
};

/* GL_KHR_debug */
struct gl_KHR_debug
{
	void (APIENTRYP DebugMessageControl)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
	void (APIENTRYP DebugMessageInsert)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
	void (APIENTRYP DebugMessageCallback)(GLDEBUGPROC callback, const void *userParam);
	GLuint (APIENTRYP GetDebugMessageLog)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
	void (APIENTRYP PushDebugGroup)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
	void (APIENTRYP PopDebugGroup)(void);
	void (APIENTRYP ObjectLabel)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectLabel)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP ObjectPtrLabel)(const void *ptr, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectPtrLabel)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP GetPointerv)(GLenum pname, void **params);
	void (APIENTRYP DebugMessageControlKHR)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
	void (APIENTRYP DebugMessageInsertKHR)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
	void (APIENTRYP DebugMessageCallbackKHR)(GLDEBUGPROCKHR callback, const void *userParam);
	GLuint (APIENTRYP GetDebugMessageLogKHR)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
	void (APIENTRYP PushDebugGroupKHR)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
	void (APIENTRYP PopDebugGroupKHR)(void);
	void (APIENTRYP ObjectLabelKHR)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectLabelKHR)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP ObjectPtrLabelKHR)(const void *ptr, GLsizei length, const GLchar *label);
	void (APIENTRYP GetObjectPtrLabelKHR)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
	void (APIENTRYP GetPointervKHR)(GLenum pname, void **params);
};

/* GL_KHR_robustness */
struct gl_KHR_robustness
{
	GLenum (APIENTRYP GetGraphicsResetStatus)(void);
	void (APIENTRYP ReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
	void (APIENTRYP GetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
	void (APIENTRYP GetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
	GLenum (APIENTRYP GetGraphicsResetStatusKHR)(void);
	void (APIENTRYP ReadnPixelsKHR)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
	void (APIENTRYP GetnUniformfvKHR)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
	void (APIENTRYP GetnUniformivKHR)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
	void (APIENTRYP GetnUniformuivKHR)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
};

/*
 * Each subsequent version of the core structs only appends
 * new members to previous one. When added into a union they
 * each have pair-wise Common Initial Sequences. According
 * to the standard, it should be legal to write to one and
 * read another without running into aliasing optimization
 * issues. Initialize the highest version you need and cast
 * pointers to lower versions where necessary.
 */
union gl_combined_core30
{
	struct gl_core30 core30;
};

union gl_combined_core31
{
	struct gl_core30 core30;
	struct gl_core31 core31;
};

union gl_combined_core32
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
};

union gl_combined_core33
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
};

union gl_combined_core40
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
	struct gl_core40 core40;
};

union gl_combined_core41
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
	struct gl_core40 core40;
	struct gl_core41 core41;
};

union gl_combined_core42
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
	struct gl_core40 core40;
	struct gl_core41 core41;
	struct gl_core42 core42;
};

union gl_combined_core43
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
	struct gl_core40 core40;
	struct gl_core41 core41;
	struct gl_core42 core42;
	struct gl_core43 core43;
};

union gl_combined_core44
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
	struct gl_core40 core40;
	struct gl_core41 core41;
	struct gl_core42 core42;
	struct gl_core43 core43;
	struct gl_core44 core44;
};

union gl_combined_core45
{
	struct gl_core30 core30;
	struct gl_core31 core31;
	struct gl_core32 core32;
	struct gl_core33 core33;
	struct gl_core40 core40;
	struct gl_core41 core41;
	struct gl_core42 core42;
	struct gl_core43 core43;
	struct gl_core44 core44;
	struct gl_core45 core45;
};

/*
 * Initialize function pointers of core API structs. A GL
 * context needs to be current that supports the version in
 * question when calling.
 */
struct gl_api;
struct gl_core30 *gl_resolve_core30(struct gl_api *, struct gl_core30 *);
struct gl_core31 *gl_resolve_core31(struct gl_api *, struct gl_core31 *);
struct gl_core32 *gl_resolve_core32(struct gl_api *, struct gl_core32 *);
struct gl_core33 *gl_resolve_core33(struct gl_api *, struct gl_core33 *);
struct gl_core40 *gl_resolve_core40(struct gl_api *, struct gl_core40 *);
struct gl_core41 *gl_resolve_core41(struct gl_api *, struct gl_core41 *);
struct gl_core42 *gl_resolve_core42(struct gl_api *, struct gl_core42 *);
struct gl_core43 *gl_resolve_core43(struct gl_api *, struct gl_core43 *);
struct gl_core44 *gl_resolve_core44(struct gl_api *, struct gl_core44 *);
struct gl_core45 *gl_resolve_core45(struct gl_api *, struct gl_core45 *);

/*
 *Initialize function pointers in extension struct. Return
 * NULL if extension is not supported, otherwise `ext`. A GL
 * context must be current when calling.
 */
struct gl_ARB_ES2_compatibility *gl_resolve_ARB_ES2_compatibility(struct gl_api *, struct gl_ARB_ES2_compatibility *);
struct gl_ARB_ES3_1_compatibility *gl_resolve_ARB_ES3_1_compatibility(struct gl_api *, struct gl_ARB_ES3_1_compatibility *);
struct gl_ARB_ES3_2_compatibility *gl_resolve_ARB_ES3_2_compatibility(struct gl_api *, struct gl_ARB_ES3_2_compatibility *);
struct gl_ARB_base_instance *gl_resolve_ARB_base_instance(struct gl_api *, struct gl_ARB_base_instance *);
struct gl_ARB_bindless_texture *gl_resolve_ARB_bindless_texture(struct gl_api *, struct gl_ARB_bindless_texture *);
struct gl_ARB_blend_func_extended *gl_resolve_ARB_blend_func_extended(struct gl_api *, struct gl_ARB_blend_func_extended *);
struct gl_ARB_buffer_storage *gl_resolve_ARB_buffer_storage(struct gl_api *, struct gl_ARB_buffer_storage *);
struct gl_ARB_cl_event *gl_resolve_ARB_cl_event(struct gl_api *, struct gl_ARB_cl_event *);
struct gl_ARB_clear_buffer_object *gl_resolve_ARB_clear_buffer_object(struct gl_api *, struct gl_ARB_clear_buffer_object *);
struct gl_ARB_clear_texture *gl_resolve_ARB_clear_texture(struct gl_api *, struct gl_ARB_clear_texture *);
struct gl_ARB_clip_control *gl_resolve_ARB_clip_control(struct gl_api *, struct gl_ARB_clip_control *);
struct gl_ARB_color_buffer_float *gl_resolve_ARB_color_buffer_float(struct gl_api *, struct gl_ARB_color_buffer_float *);
struct gl_ARB_compute_shader *gl_resolve_ARB_compute_shader(struct gl_api *, struct gl_ARB_compute_shader *);
struct gl_ARB_compute_variable_group_size *gl_resolve_ARB_compute_variable_group_size(struct gl_api *, struct gl_ARB_compute_variable_group_size *);
struct gl_ARB_copy_buffer *gl_resolve_ARB_copy_buffer(struct gl_api *, struct gl_ARB_copy_buffer *);
struct gl_ARB_copy_image *gl_resolve_ARB_copy_image(struct gl_api *, struct gl_ARB_copy_image *);
struct gl_ARB_debug_output *gl_resolve_ARB_debug_output(struct gl_api *, struct gl_ARB_debug_output *);
struct gl_ARB_direct_state_access *gl_resolve_ARB_direct_state_access(struct gl_api *, struct gl_ARB_direct_state_access *);
struct gl_ARB_draw_buffers *gl_resolve_ARB_draw_buffers(struct gl_api *, struct gl_ARB_draw_buffers *);
struct gl_ARB_draw_buffers_blend *gl_resolve_ARB_draw_buffers_blend(struct gl_api *, struct gl_ARB_draw_buffers_blend *);
struct gl_ARB_draw_elements_base_vertex *gl_resolve_ARB_draw_elements_base_vertex(struct gl_api *, struct gl_ARB_draw_elements_base_vertex *);
struct gl_ARB_draw_indirect *gl_resolve_ARB_draw_indirect(struct gl_api *, struct gl_ARB_draw_indirect *);
struct gl_ARB_draw_instanced *gl_resolve_ARB_draw_instanced(struct gl_api *, struct gl_ARB_draw_instanced *);
struct gl_ARB_fragment_program *gl_resolve_ARB_fragment_program(struct gl_api *, struct gl_ARB_fragment_program *);
struct gl_ARB_framebuffer_no_attachments *gl_resolve_ARB_framebuffer_no_attachments(struct gl_api *, struct gl_ARB_framebuffer_no_attachments *);
struct gl_ARB_framebuffer_object *gl_resolve_ARB_framebuffer_object(struct gl_api *, struct gl_ARB_framebuffer_object *);
struct gl_ARB_geometry_shader4 *gl_resolve_ARB_geometry_shader4(struct gl_api *, struct gl_ARB_geometry_shader4 *);
struct gl_ARB_get_program_binary *gl_resolve_ARB_get_program_binary(struct gl_api *, struct gl_ARB_get_program_binary *);
struct gl_ARB_get_texture_sub_image *gl_resolve_ARB_get_texture_sub_image(struct gl_api *, struct gl_ARB_get_texture_sub_image *);
struct gl_ARB_gpu_shader_fp64 *gl_resolve_ARB_gpu_shader_fp64(struct gl_api *, struct gl_ARB_gpu_shader_fp64 *);
struct gl_ARB_gpu_shader_int64 *gl_resolve_ARB_gpu_shader_int64(struct gl_api *, struct gl_ARB_gpu_shader_int64 *);
struct gl_ARB_imaging *gl_resolve_ARB_imaging(struct gl_api *, struct gl_ARB_imaging *);
struct gl_ARB_indirect_parameters *gl_resolve_ARB_indirect_parameters(struct gl_api *, struct gl_ARB_indirect_parameters *);
struct gl_ARB_instanced_arrays *gl_resolve_ARB_instanced_arrays(struct gl_api *, struct gl_ARB_instanced_arrays *);
struct gl_ARB_internalformat_query *gl_resolve_ARB_internalformat_query(struct gl_api *, struct gl_ARB_internalformat_query *);
struct gl_ARB_internalformat_query2 *gl_resolve_ARB_internalformat_query2(struct gl_api *, struct gl_ARB_internalformat_query2 *);
struct gl_ARB_invalidate_subdata *gl_resolve_ARB_invalidate_subdata(struct gl_api *, struct gl_ARB_invalidate_subdata *);
struct gl_ARB_map_buffer_range *gl_resolve_ARB_map_buffer_range(struct gl_api *, struct gl_ARB_map_buffer_range *);
struct gl_ARB_multi_bind *gl_resolve_ARB_multi_bind(struct gl_api *, struct gl_ARB_multi_bind *);
struct gl_ARB_multi_draw_indirect *gl_resolve_ARB_multi_draw_indirect(struct gl_api *, struct gl_ARB_multi_draw_indirect *);
struct gl_ARB_multisample *gl_resolve_ARB_multisample(struct gl_api *, struct gl_ARB_multisample *);
struct gl_ARB_occlusion_query *gl_resolve_ARB_occlusion_query(struct gl_api *, struct gl_ARB_occlusion_query *);
struct gl_ARB_parallel_shader_compile *gl_resolve_ARB_parallel_shader_compile(struct gl_api *, struct gl_ARB_parallel_shader_compile *);
struct gl_ARB_point_parameters *gl_resolve_ARB_point_parameters(struct gl_api *, struct gl_ARB_point_parameters *);
struct gl_ARB_program_interface_query *gl_resolve_ARB_program_interface_query(struct gl_api *, struct gl_ARB_program_interface_query *);
struct gl_ARB_provoking_vertex *gl_resolve_ARB_provoking_vertex(struct gl_api *, struct gl_ARB_provoking_vertex *);
struct gl_ARB_robustness *gl_resolve_ARB_robustness(struct gl_api *, struct gl_ARB_robustness *);
struct gl_ARB_sample_locations *gl_resolve_ARB_sample_locations(struct gl_api *, struct gl_ARB_sample_locations *);
struct gl_ARB_sample_shading *gl_resolve_ARB_sample_shading(struct gl_api *, struct gl_ARB_sample_shading *);
struct gl_ARB_sampler_objects *gl_resolve_ARB_sampler_objects(struct gl_api *, struct gl_ARB_sampler_objects *);
struct gl_ARB_separate_shader_objects *gl_resolve_ARB_separate_shader_objects(struct gl_api *, struct gl_ARB_separate_shader_objects *);
struct gl_ARB_shader_atomic_counters *gl_resolve_ARB_shader_atomic_counters(struct gl_api *, struct gl_ARB_shader_atomic_counters *);
struct gl_ARB_shader_image_load_store *gl_resolve_ARB_shader_image_load_store(struct gl_api *, struct gl_ARB_shader_image_load_store *);
struct gl_ARB_shader_storage_buffer_object *gl_resolve_ARB_shader_storage_buffer_object(struct gl_api *, struct gl_ARB_shader_storage_buffer_object *);
struct gl_ARB_shader_subroutine *gl_resolve_ARB_shader_subroutine(struct gl_api *, struct gl_ARB_shader_subroutine *);
struct gl_ARB_shading_language_include *gl_resolve_ARB_shading_language_include(struct gl_api *, struct gl_ARB_shading_language_include *);
struct gl_ARB_sparse_buffer *gl_resolve_ARB_sparse_buffer(struct gl_api *, struct gl_ARB_sparse_buffer *);
struct gl_ARB_sparse_texture *gl_resolve_ARB_sparse_texture(struct gl_api *, struct gl_ARB_sparse_texture *);
struct gl_ARB_gl_spirv *gl_resolve_ARB_gl_spirv(struct gl_api *, struct gl_ARB_gl_spirv *);
struct gl_ARB_sync *gl_resolve_ARB_sync(struct gl_api *, struct gl_ARB_sync *);
struct gl_ARB_tessellation_shader *gl_resolve_ARB_tessellation_shader(struct gl_api *, struct gl_ARB_tessellation_shader *);
struct gl_ARB_texture_barrier *gl_resolve_ARB_texture_barrier(struct gl_api *, struct gl_ARB_texture_barrier *);
struct gl_ARB_texture_buffer_object *gl_resolve_ARB_texture_buffer_object(struct gl_api *, struct gl_ARB_texture_buffer_object *);
struct gl_ARB_texture_buffer_range *gl_resolve_ARB_texture_buffer_range(struct gl_api *, struct gl_ARB_texture_buffer_range *);
struct gl_ARB_texture_compression *gl_resolve_ARB_texture_compression(struct gl_api *, struct gl_ARB_texture_compression *);
struct gl_ARB_texture_multisample *gl_resolve_ARB_texture_multisample(struct gl_api *, struct gl_ARB_texture_multisample *);
struct gl_ARB_texture_storage *gl_resolve_ARB_texture_storage(struct gl_api *, struct gl_ARB_texture_storage *);
struct gl_ARB_texture_storage_multisample *gl_resolve_ARB_texture_storage_multisample(struct gl_api *, struct gl_ARB_texture_storage_multisample *);
struct gl_ARB_texture_view *gl_resolve_ARB_texture_view(struct gl_api *, struct gl_ARB_texture_view *);
struct gl_ARB_timer_query *gl_resolve_ARB_timer_query(struct gl_api *, struct gl_ARB_timer_query *);
struct gl_ARB_transform_feedback2 *gl_resolve_ARB_transform_feedback2(struct gl_api *, struct gl_ARB_transform_feedback2 *);
struct gl_ARB_transform_feedback3 *gl_resolve_ARB_transform_feedback3(struct gl_api *, struct gl_ARB_transform_feedback3 *);
struct gl_ARB_transform_feedback_instanced *gl_resolve_ARB_transform_feedback_instanced(struct gl_api *, struct gl_ARB_transform_feedback_instanced *);
struct gl_ARB_uniform_buffer_object *gl_resolve_ARB_uniform_buffer_object(struct gl_api *, struct gl_ARB_uniform_buffer_object *);
struct gl_ARB_vertex_attrib_64bit *gl_resolve_ARB_vertex_attrib_64bit(struct gl_api *, struct gl_ARB_vertex_attrib_64bit *);
struct gl_ARB_vertex_attrib_binding *gl_resolve_ARB_vertex_attrib_binding(struct gl_api *, struct gl_ARB_vertex_attrib_binding *);
struct gl_ARB_vertex_type_2_10_10_10_rev *gl_resolve_ARB_vertex_type_2_10_10_10_rev(struct gl_api *, struct gl_ARB_vertex_type_2_10_10_10_rev *);
struct gl_ARB_viewport_array *gl_resolve_ARB_viewport_array(struct gl_api *, struct gl_ARB_viewport_array *);
struct gl_KHR_blend_equation_advanced *gl_resolve_KHR_blend_equation_advanced(struct gl_api *, struct gl_KHR_blend_equation_advanced *);
struct gl_KHR_debug *gl_resolve_KHR_debug(struct gl_api *, struct gl_KHR_debug *);
struct gl_KHR_robustness *gl_resolve_KHR_robustness(struct gl_api *, struct gl_KHR_robustness *);
